name: Build PirateWallet-Lite

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          
      - name: Install dependencies
        run: |
          rustup target add x86_64-pc-windows-msvc
          
      - name: Build
        run: |
          mkdir -p res/libs
          cd res/libzecwalletlite
          cargo build --lib --release
          
          # Check both possible extensions and copy the file that exists
          if (Test-Path "target/release/libpiratewalletlite.a") {
            Copy-Item "target/release/libpiratewalletlite.a" "../../res/libs/"
          } elseif (Test-Path "target/release/piratewalletlite.lib") {
            Copy-Item "target/release/piratewalletlite.lib" "../../res/libs/libpiratewalletlite.a"
          } elseif (Test-Path "target/release/qtlib.lib") {
            Copy-Item "target/release/qtlib.lib" "../../res/libs/libpiratewalletlite.a"
          } else {
            Get-ChildItem "target/release" -Recurse
            throw "Could not find the compiled library file"
          }
          
          cd ../..
          qmake piratewallet-lite-mingw.pro CONFIG+=release
          nmake

  build-linux-x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgl1-mesa-dev libsodium-dev \
            mesa-common-dev libglu1-mesa-dev
          
      - name: Set up Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          host: 'linux'
          target: 'desktop'
          
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          
      - name: Build
        run: |
          set -x  # Enable debug output
          mkdir -p res/libs
          cd res/libzecwalletlite
          
          # Set environment variables
          export SODIUM_LIB_DIR=/usr/lib/x86_64-linux-gnu
          
          # Build the Rust library
          cargo build --lib --release
          
          # Copy the library (with fallback to find it if not in expected location)
          cp target/release/libpiratewalletlite.a ../../res/libs/ || {
            echo "Library not found at expected location, searching for it:"
            find target -name "*.a" -o -name "*.so"
            find target -type f -size +100k
            exit 1
          }
          
          cd ../..
          # Ensure Qt is on the path
          export PATH="${Qt5_DIR}/bin:$PATH"
          qmake piratewallet-lite.pro CONFIG+=release
          make -j$(nproc) V=1

  build-linux-aarch64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libgl1-mesa-dev libsodium-dev \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu binutils-aarch64-linux-gnu
          
      - name: Set up Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          host: 'linux'
          target: 'desktop'
          
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          
      - name: Build dependencies
        run: |
          set -x  # Enable debug output
          BUILD=$(./depends/config.guess)
          HOST="aarch64-linux-gnu"
          make -C ./depends HOST="$HOST" -j$(nproc) V=1 || {
            echo "Dependencies build failed. Showing last 100 lines of logs:"
            tail -n 100 ./depends/work/build/*/config.log || true
            exit 1
          }
          
      - name: Build
        run: |
          set -x  # Enable debug output
          mkdir -p res/libs
          cd res/libzecwalletlite
          rustup target add aarch64-unknown-linux-gnu
          
          # Set environment variables for cross-compilation
          export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
          export CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc
          export CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++
          export AR_aarch64_unknown_linux_gnu=aarch64-linux-gnu-ar
          
          # Build the Rust library
          cargo build --lib --release --target aarch64-unknown-linux-gnu
          
          # Copy the library (with fallback to find it if not in expected location)
          cp target/aarch64-unknown-linux-gnu/release/libpiratewalletlite.a ../../res/libs/ || {
            find target -name "*.a" -o -name "*.so"
            find target/aarch64-unknown-linux-gnu -type f -size +100k
            exit 1
          }
          
          cd ../..
          export PATH="$(pwd)/depends/aarch64-linux-gnu/bin:$PATH"
          export QT_STATIC="$(pwd)/depends/aarch64-linux-gnu"
          
          # Print directory contents to debug
          ls -la "$QT_STATIC/bin" || true
          
          # Check if qmake exists
          if [ ! -f "$QT_STATIC/bin/qmake" ]; then
            echo "qmake not found at expected location. Searching for it:"
            find depends -name qmake
            exit 1
          fi
          
          "$QT_STATIC"/bin/qmake piratewallet-lite.pro CONFIG+=release
          make -j$(nproc) V=1

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install dependencies
        run: |
          brew install libsodium qt@5
          brew link qt@5 --force
          # Install create-dmg if it's needed for packaging
          brew install create-dmg
          
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          
      - name: Build
        run: |
          mkdir -p res/libs
          cd res/libzecwalletlite
          SODIUM_LIB_DIR=$(brew --prefix libsodium)/lib
          cargo build --lib --release
          cp target/release/libpiratewalletlite.a ../../res/libs/ || \
            { find target -name "*.a" -o -name "*.dylib"; exit 1; }
          cd ../..
          
          export PATH="$(brew --prefix qt@5)/bin:$PATH"
          qmake piratewallet-lite.pro CONFIG+=release
          make -j$(sysctl -n hw.ncpu)
          
          # Create DMG (if needed)
          mkdir -p artifacts
          if [ -d "PirateWallet-Lite.app" ]; then
            create-dmg --volname "PirateWallet-Lite" --volicon "res/logo.icns" \
            --window-pos 200 120 --icon "PirateWallet-Lite.app" 200 190 \
            --app-drop-link 600 185 --window-size 800 400 \
            artifacts/macOS-piratewallet-lite.dmg PirateWallet-Lite.app || true
          fi

  build-macos-arm64:
    runs-on: macos-latest-xlarge # This uses M1 Mac runners
    steps:
      - uses: actions/checkout@v3
      
      - name: Install dependencies
        run: |
          brew install libsodium
          
      - name: Set up Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          host: 'mac'
          target: 'desktop'
          
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          
      - name: Build
        run: |
          # Use the build-mac-arm.sh script
          export APP_VERSION="1.0.11"
          export PREV_VERSION="1.0.10"
          bash utils/build-mac-arm.sh 